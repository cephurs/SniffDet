!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.4	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -Wall  $(LIBNET_OPTIONS)$/;"	m
CTAGS	Makefile	/^CTAGS = ctags -R$/;"	m
DESTDIR	Makefile	/^DESTDIR=$/;"	m
INCLUDES	Makefile	/^INCLUDES = -I..$/;"	m
INSTALLCMD	Makefile	/^INSTALLCMD = \/usr\/bin\/install -c$/;"	m
LIBNET_OPTIONS	Makefile	/^LIBNET_OPTIONS=-D_BSD_SOURCE -D__BSD_SOURCE -D__FAVOR_BSD -DHAVE_NET_ETHERNET_H -DLIBNET_LIL_ENDIAN$/;"	m
LIBS	Makefile	/^LIBS = -ldl -lpcap -lnet $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
bindir	Makefile	/^bindir=${exec_prefix}\/bin$/;"	m
exec_prefix	Makefile	/^exec_prefix=${prefix}$/;"	m
includedir	Makefile	/^includedir=${prefix}\/include$/;"	m
libdir	Makefile	/^libdir=${exec_prefix}\/lib$/;"	m
mandir	Makefile	/^mandir=${prefix}\/man$/;"	m
pluginsdir	Makefile	/^pluginsdir=${libdir}\/sniffdet\/plugins$/;"	m
prefix	Makefile	/^prefix=\/usr\/local$/;"	m
print_arptest_results	stdout.c	/^static int print_arptest_results(struct test_info info, int verbose)$/;"	f	file:
print_arptest_results	xml.c	/^static int print_arptest_results(struct test_info info, int verbose)$/;"	f	file:
print_dnstest_results	stdout.c	/^static int print_dnstest_results(struct test_info info, int verbose)$/;"	f	file:
print_dnstest_results	xml.c	/^static int print_dnstest_results(struct test_info info, int verbose)$/;"	f	file:
print_icmptest_results	stdout.c	/^static int print_icmptest_results(struct test_info info, int verbose)$/;"	f	file:
print_icmptest_results	xml.c	/^static int print_icmptest_results(struct test_info info, int verbose)$/;"	f	file:
print_info_header	xml.c	/^static int print_info_header(struct test_info info, char *errbuf)$/;"	f	file:
print_info_result	xml.c	/^static int print_info_result(struct test_info info, char *errbuf)$/;"	f	file:
print_latencytest_results	stdout.c	/^static int print_latencytest_results(struct test_info info, int verbose)$/;"	f	file:
print_latencytest_results	xml.c	/^static int print_latencytest_results(struct test_info info, int verbose)$/;"	f	file:
print_tests_results	stdout.c	/^static int (*print_tests_results[MAX_TESTS + 1]) ($/;"	v	file:
print_tests_results	xml.c	/^static int (*print_tests_results[MAX_TESTS + 1]) (struct test_info info,$/;"	v	file:
sbindir	Makefile	/^sbindir=${exec_prefix}\/sbin$/;"	m
srcdir	Makefile	/^srcdir=.$/;"	m
test_output	null.c	/^int test_output(char *target, struct test_info info[],$/;"	f
test_output	stdout.c	/^int test_output(char *target, struct test_info info[],$/;"	f
test_output	xml.c	/^int test_output(char *target, struct test_info info[],$/;"	f
timeString	stdout.c	/^static char *timeString(time_t t)$/;"	f	file:
timeString	xml.c	/^static char *timeString(time_t t)$/;"	f	file:
xml_output	xml.c	/^static int xml_output(char *target, char *filename, $/;"	f	file:
xmlfile	xml.c	/^static FILE *xmlfile;$/;"	v	file:
